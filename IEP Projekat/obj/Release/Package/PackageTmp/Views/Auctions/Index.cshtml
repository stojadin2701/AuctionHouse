@model List<IEP_Projekat.Models.AuctionViewModel>
@using Microsoft.AspNet.Identity.Owin;
@using System.Web;
@using IEP_Projekat.Models 
@{
    ViewBag.Title = "Manage Auctions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    var aucIds = new Array();
    function pad(str) {
        return ("0" + str).slice(-2);
    }
    function hhmmss(secs) {
        var minutes = Math.floor(secs / 60);
        secs = secs % 60;
        var hours = Math.floor(minutes / 60)
        minutes = minutes % 60;
        return pad(hours) + ":" + pad(minutes) + ":" + pad(secs);
    }
    @foreach(AuctionViewModel item in Model.Where(a => a.Duration>0)){
        @:aucIds.push(@item.Id);
    }
    var ajax_call = function () {
        $.ajax({
            url: "/Auctions/GetTimeLeft",
            datatype: "text",
            type: "POST",
            traditional: true,
            data: { 'auctionIds' :aucIds},
            success: function (retStr) {
                if(retStr!=null){
                    var idArr = retStr.split(';');
                    for (var i = 0; i < idArr.length; i++) {
                        var time_price_user = idArr[i].split(',');
                        var timeLeft = time_price_user[0].split(' ');
                        if (timeLeft[1] > 0 && timeLeft[1] <= 10)
                            $("#time_" + timeLeft[0]).html('<span style="background-color:#f66">' + hhmmss(timeLeft[1]) + '</span>');
                        else $("#time_" + timeLeft[0]).html(hhmmss(timeLeft[1]));
                        if (timeLeft[1] == 0) {
                            $("#bidButton_" + timeLeft[0]).html('');
                            $("#thumb_" + timeLeft[0]).css({ "opacity":"0.4", "filter":"alpha(opacity=40)" });
                        }
                        $("#price_" + timeLeft[0]).html(time_price_user[1]);
                        if (time_price_user.length == 3) $("#user_" + timeLeft[0]).html(time_price_user[2]);
                    }
                }
            },
            error: function () {
                $("#time").html("ERROR");
            }
        });
    }
    setInterval(ajax_call, 1000);
</script>

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

<div class="row">
    @foreach (var item in Model)
    {
            <div class="col-sm-3 col-md-3 col-lg-3" style="margin-bottom:20px;">
                <div class="thumbnail @((item.State == "OPEN" || item.State == "READY")? String.Empty : "past")" id="thumb_@item.Id">
                    <img class="img-thumbnail" src="data:image;base64,@System.Convert.ToBase64String(item.ImageContent)" />
                    <div class="caption">
                        <center>
                            <h4>
                                <span style="margin-bottom:10px;">@item.Name</span><br />
                                Price: <span id="price_@item.Id">@Html.DisplayFor(modelItem => item.Price)</span> &#358;
</h4>
                            @switch (item.State)
                            {
                                case "OPEN":
                                    @:Last bidder:
                                    if (item.LastBidderUserName != null)
                                    {
                                        <span id="user_@item.Id">@item.LastBidderUserName</span>
                                    }
                                    else
                                    {
                                        <span id="user_@item.Id">No bids yet</span>
                                    }
                                    break;
                                case "SOLD":
                                    @:Sold to
                                    if (item.LastBidderUserName != null)
                                    {
                                        <span id="user_@item.Id">@item.LastBidderUserName</span>
                                    }
                                    else
                                    {
                                        <span id="user_@item.Id">No bids yet</span>
                                    }
                                    break;
                                case "EXPIRED":
                                    @:Expired
                                    break;
                            }
                        </center>
                    </div>
                    @{
                        TimeSpan time = TimeSpan.FromSeconds(item.Duration);
                    }
                    <center id="time_@item.Id">@Html.Raw(time.ToString(@"hh\:mm\:ss"))</center>
                    @if (item.State == "READY")
                    {
                        <br />
                        @:<center>@Html.ActionLink("Open Auction", "Open", "Auctions", new { Id = item.Id }, new { @class = "btn btn-success" })</center>


                    }
                    <center>
                        @Html.ActionLink("Details", "Details", "Auctions", new { Id = item.Id }, null)
                        @if (item.State == "READY")
                        {
                            @: |
                            @Html.ActionLink("Edit", "Edit", new { Id = item.Id }) @:|
                            @Html.ActionLink("Delete", "Delete", new { Id = item.Id })

                        }
                    </center>

                    <!--<center>@Html.ActionLink("Bid Now", "BidNow", "Bid", null, new { @class = "btn btn-primary" })</center>-->
                </div>

            </div>
        }
</div>